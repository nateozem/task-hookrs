(function() {var implementors = {};
implementors["serde"] = [];implementors["uuid"] = ["impl <a class='trait' href='serde/ser/trait.Serialize.html' title='serde::ser::Serialize'>Serialize</a> for <a class='struct' href='uuid/struct.Uuid.html' title='uuid::Uuid'>Uuid</a>",];implementors["serde_json"] = ["impl <a class='trait' href='serde/ser/trait.Serialize.html' title='serde::ser::Serialize'>Serialize</a> for <a class='enum' href='serde_json/value/enum.Value.html' title='serde_json::value::Value'>Value</a>",];implementors["task_hookrs"] = ["impl <a class='trait' href='serde/ser/trait.Serialize.html' title='serde::ser::Serialize'>Serialize</a> for <a class='struct' href='task_hookrs/annotation/struct.Annotation.html' title='task_hookrs::annotation::Annotation'>Annotation</a>","impl <a class='trait' href='serde/ser/trait.Serialize.html' title='serde::ser::Serialize'>Serialize</a> for <a class='enum' href='serde_json/value/enum.Value.html' title='serde_json::value::Value'>Value</a>","impl <a class='trait' href='serde/ser/trait.Serialize.html' title='serde::ser::Serialize'>Serialize</a> for <a class='struct' href='uuid/struct.Uuid.html' title='uuid::Uuid'>Uuid</a>","impl <a class='trait' href='serde/ser/trait.Serialize.html' title='serde::ser::Serialize'>Serialize</a> for <a class='struct' href='task_hookrs/date/struct.Date.html' title='task_hookrs::date::Date'>Date</a>","impl <a class='trait' href='serde/ser/trait.Serialize.html' title='serde::ser::Serialize'>Serialize</a> for <a class='enum' href='task_hookrs/priority/enum.TaskPriority.html' title='task_hookrs::priority::TaskPriority'>TaskPriority</a>","impl <a class='trait' href='serde/ser/trait.Serialize.html' title='serde::ser::Serialize'>Serialize</a> for <a class='enum' href='task_hookrs/status/enum.TaskStatus.html' title='task_hookrs::status::TaskStatus'>TaskStatus</a>","impl <a class='trait' href='serde/ser/trait.Serialize.html' title='serde::ser::Serialize'>Serialize</a> for <a class='struct' href='task_hookrs/task/struct.Task.html' title='task_hookrs::task::Task'>Task</a>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
